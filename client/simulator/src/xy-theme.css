 
.react-flow {
    /* Custom Variables */
    --xy-theme-selected: #F57DBD;
    --xy-theme-hover: #C5C5C5;
    --xy-theme-edge-hover: black;
    --xy-theme-color-focus: #E8E8E8;
 
    /* Built-in Variables see https://reactflow.dev/learn/customization/theming */
    --xy-node-border-default: 1px solid #EDEDED;
  
    --xy-node-boxshadow-default: 
      0px 3.54px 4.55px 0px #00000005, 
      0px 3.54px 4.55px 0px #0000000D, 
      0px 0.51px 1.01px 0px #0000001A;
  
    --xy-node-border-radius-default: 8px;
  
    --xy-handle-background-color-default: #ffffff;
    --xy-handle-border-color-default: #AAAAAA;
  
    --xy-edge-label-color-default: #505050;
}
 
.react-flow.dark { 
    --xy-node-boxshadow-default: 
    0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.05), /* light shadow */
    0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.13), /* medium shadow */
    0px 0.51px 1.01px 0px rgba(255, 255, 255, 0.2);  /* smallest shadow */  
    --xy-theme-color-focus: #535353;
}
 
/* Customizing Default Theming */
 
.react-flow__node {
    box-shadow: var(--xy-node-boxshadow-default);
    border-radius: var(--xy-node-border-radius-default);
    background-color: var(--xy-node-background-color-default);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 10px;
    font-size: 12px;
    flex-direction: column;
    border: var(--xy-node-border-default);
    color: var(--xy-node-color, var(--xy-node-color-default));
}
 
.react-flow__node.selectable:focus {
    box-shadow: 0px 0px 0px 4px var(--xy-theme-color-focus);
    border-color: #d9d9d9;
}
 
.react-flow__node.selectable:focus:active {
    box-shadow: var(--xy-node-boxshadow-default);
}
 
 

 
.react-flow__node.selectable.selected {
    border-color: var(--xy-theme-selected);
    box-shadow: var(--xy-node-boxshadow-default);
}
 
.react-flow__node-group {
    background-color: rgba(207, 182, 255, 0.4);
    border-color: #9E86ED;
}
 

 
.react-flow__handle {
    background-color: var(--xy-handle-background-color-default);
}
 

 
 
.react-flow__node-resizer {
    border-radius: 0;
    border: none;
}
 
.react-flow__resize-control.handle {
    background-color: #ffffff;
    border-color: #9E86ED;
    border-radius: 0;
    width: 5px;
    height: 5px;
}

.react-flow__edge path {
    stroke: var( --line-color);
    stroke-width: var( --line-thickness) !important; /* Ajusta el grosor */
  }

  .react-flow__edges {
    z-index: 9999 !important;
  }
  

  .react-flow__controls-button-custom,
   .react-flow__controls-button-custom_green, 
   .react-flow__controls-button-custom_red,
   .react-flow__controls-button-custom_blue {
     border: none; 
     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
     padding: 8px; 
     cursor: pointer; 
     transition: background-color 0.3s ease, box-shadow 0.3s ease; 
   }

   .react-flow__controls-button-custom_green, 
   .react-flow__controls-button-custom_red,
   .react-flow__controls-button-custom_blue{
    color: white !important
   }

   .react-flow__controls-button-custom{
    background-color: white;

  }

  .react-flow {
    --xy-node-boxshadow-hover-default: none;
    --xy-node-boxshadow-selected-default: none;
  }

  .react-flow__node.dragging {
    box-shadow: none !important;
  }

  
  .react-flow__node {
    box-shadow: none !important;
  }
  
  
  .react-flow__controls-button-custom:hover {
    background-color: #f0f0f0; 
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); 
  }
  
  .react-flow__controls-button-custom svg {
    stroke: currentColor; 
    fill: none; 
    color: black;
  }

  .react-flow__controls-button-custom_green {
    background-color: #7DC77A;
  }


  .react-flow__controls-button-custom_red {
    background-color: #E28C8C;
  }

  .react-flow__controls-button-custom_blue {
    background-color: #8CC7E2;
  }



/*  ANIMATION CURRENT INSTRUCTION INFO */
.animate-exit {
  animation: slideOut 180ms forwards;
}

.animate-enter {
  animation: slideIn 180ms forwards;
}

@keyframes slideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
